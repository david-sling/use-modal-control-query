{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "simple-example-use-mcq",
  "type": "registry:component",
  "title": "useModalControlQuery",
  "description": "A simple implementation of the useModalControlQuery hook",
  "dependencies": [
    "nuqs"
  ],
  "registryDependencies": [
    "dialog",
    "button"
  ],
  "files": [
    {
      "path": "registry/hooks/use-modal-control-query/hooks/use-modal-control-query.ts",
      "content": "import { useRouter } from \"next/navigation\";\nimport { Options, parseAsString, useQueryState } from \"nuqs\";\n\nexport const useModalControlQuery = <HasState extends boolean = false>(\n  action_name: string,\n  {\n    openBehaviour = \"push\",\n    closeBehaviour = \"back\",\n    key = \"modal\",\n    onlyExplicitOpen,\n    hasState,\n  }: {\n    openBehaviour?: \"push\" | \"replace\";\n    closeBehaviour?: \"push\" | \"replace\" | \"back\";\n    key?: string;\n    onlyExplicitOpen?: boolean;\n    hasState?: HasState;\n  } = {}\n) => {\n  const [openSheet, setOpenSheet] = useQueryState(key, parseAsString);\n  const router = useRouter();\n\n  const [open_action, state] = hasState\n    ? (openSheet?.split(\":\") ?? [])\n    : [openSheet];\n\n  const set = (\n    open: boolean | (HasState extends true ? string : boolean),\n    options?: Options\n  ) => {\n    if (open)\n      setOpenSheet(\n        [action_name, ...(typeof open === \"string\" ? [open] : [])].join(\":\"),\n        {\n          history: openBehaviour,\n          shallow: true,\n          ...options,\n        }\n      );\n    else if (closeBehaviour === \"back\") router.back();\n    else\n      setOpenSheet(null, {\n        history: closeBehaviour,\n        shallow: true,\n        ...options,\n      });\n  };\n\n  return {\n    control: {\n      open: open_action === action_name,\n      onOpenChange: (open: boolean) => {\n        if (open && onlyExplicitOpen) return;\n        set(open);\n      },\n    },\n    state: (typeof state === \"string\"\n      ? state\n      : openSheet) as HasState extends true\n      ? string | boolean | null\n      : boolean | null,\n    set,\n  };\n};\n",
      "type": "registry:hook",
      "target": "hooks/use-modal-control-query.ts"
    },
    {
      "path": "registry/hooks/use-modal-control-query/app/simple-examlple/page.tsx",
      "content": "'use client'\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { useModalControlQuery } from '../../hooks/use-modal-control-query'\n\nexport default function SimpleExampleMCQ() {\n  const dialog = useModalControlQuery('hello')\n  return (\n    <Dialog {...dialog.control}>\n      <DialogTrigger asChild>\n        <Button>Say Hello</Button>\n      </DialogTrigger>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Hello</DialogTitle>\n          <DialogDescription>Notice how the url parameters are updated</DialogDescription>\n        </DialogHeader>\n      </DialogContent>\n    </Dialog>\n  )\n}\n",
      "type": "registry:page",
      "target": "app/simple-example/page.tsx"
    }
  ]
}